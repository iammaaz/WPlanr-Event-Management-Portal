@model may222017.Models.Places
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_mytemplate.cshtml";
}

<div class="container">
    <h2>Add New Place</h2>
</div>

@using (Html.BeginForm("Create", "Places", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="container">
        <div class="form-horizontal">
            
            <hr />
            @Html.ValidationSummary(true)

            <div class="form-group">
                @Html.LabelFor(model => model.PlaceName, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.PlaceName, new { htmlAttributes = new { @class = "form-control", required = "required"} })
                    @Html.ValidationMessageFor(model => model.PlaceName)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Address, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Address)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Town, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Town, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Town)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", type = "email" } })
                    @Html.ValidationMessageFor(model => model.Email)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Telephone, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Telephone, new { htmlAttributes = new { @class = "form-control", required = "required", type = "number" } })
                    @Html.ValidationMessageFor(model => model.Telephone)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.CellNumber, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.CellNumber, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                    @Html.ValidationMessageFor(model => model.CellNumber)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Website, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Website)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.MaxPriceRange, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.MaxPriceRange, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MaxPriceRange)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.MinPriceRange, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.MinPriceRange, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MinPriceRange)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Accomodation, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Accomodation, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Accomodation)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.AirConditioning, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.RadioButtonFor(model => model.AirConditioning, "true", new { htmlAttributes = new { @class = "form-control" } }) Yes
                    @Html.RadioButtonFor(model => model.AirConditioning, "false", new { htmlAttributes = new { @class = "form-control" } }) No
                    @Html.ValidationMessageFor(model => model.AirConditioning)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.BridalRoom, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.RadioButtonFor(model => model.BridalRoom, "true", new { htmlAttributes = new { @class = "form-control" } }) Yes
                    @Html.RadioButtonFor(model => model.BridalRoom, "false", new { htmlAttributes = new { @class = "form-control" } }) No
                    @Html.ValidationMessageFor(model => model.BridalRoom)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.IsCateringAvailable, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.RadioButtonFor(model => model.IsCateringAvailable, "true", new { htmlAttributes = new { @class = "form-control" } }) Yes
                    @Html.RadioButtonFor(model => model.IsCateringAvailable, "false", new { htmlAttributes = new { @class = "form-control" } }) No
                    @Html.ValidationMessageFor(model => model.IsCateringAvailable)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ColdDrink, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.RadioButtonFor(model => model.ColdDrink, "true", new { htmlAttributes = new { @class = "form-control" } }) Yes
                    @Html.RadioButtonFor(model => model.ColdDrink, "false", new { htmlAttributes = new { @class = "form-control" } }) No
                    @Html.ValidationMessageFor(model => model.ColdDrink)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PartyLight, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.RadioButtonFor(model => model.PartyLight, "true", new { htmlAttributes = new { @class = "form-control" } }) Yes
                    @Html.RadioButtonFor(model => model.PartyLight, "false", new { htmlAttributes = new { @class = "form-control" } }) No
                    @Html.ValidationMessageFor(model => model.PartyLight)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.SoundSystem, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.RadioButtonFor(model => model.SoundSystem, "true", new { htmlAttributes = new { @class = "form-control" } }) Yes
                    @Html.RadioButtonFor(model => model.SoundSystem, "false", new { htmlAttributes = new { @class = "form-control" } }) No
                    @Html.ValidationMessageFor(model => model.SoundSystem)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Screen, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.RadioButtonFor(model => model.Screen, "true", new { htmlAttributes = new { @class = "form-control" } }) Yes
                    @Html.RadioButtonFor(model => model.Screen, "false", new { htmlAttributes = new { @class = "form-control" } }) No
                    @Html.ValidationMessageFor(model => model.Screen)
                </div>
            </div>
            @*Event Type To be Added HEre*@
            <div class="row">
                <div class="file-uploads">
                    <input class="form-control col-md-2" type="file" id="file" name="file" multiple="multiple" required /> <br />
                    @*<input class="form-control col-md-2" type="file" id="file" name="file" multiple="multiple" required /> <br />
                    <input class="form-control col-md-2" type="file" id="file" name="file" multiple="multiple" required /> <br />
                    <input class="form-control col-md-2" type="file" id="file" name="file" multiple="multiple" required /> <br />
                    <input class="form-control col-md-2" type="file" id="file" name="file" multiple="multiple" required /> <br />*@
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-6">
                    <input style="margin-top:20px;" type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>

        </div>
    </div>
}

<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
<script src="~/Client Scripts/mvcfoolproof.unobtrusive.js"></script>
<script>
    $(document).ready(function () {
        $('.file-uploads input').change(function () {
            $('.file-uploads').append('<input class="form-control col-md-2" type="file" id="file" name="file" multiple="multiple" required />');
        });
    });
</script>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>



